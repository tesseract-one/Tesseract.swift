#pragma once

/* Generated with cbindgen:0.26.0 */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>
#include "tesseract-swift-utils.h"

enum CTesseractErrorCode
#ifdef __cplusplus
  : uint32_t
#endif // __cplusplus
 {
  CTesseractErrorCode_Logger = CErrorCode_Sentinel,
  CTesseractErrorCode_Cancelled,
  CTesseractErrorCode_Serialization,
  CTesseractErrorCode_Weird,
  /**
   * Must be last for serialization purposes
   */
  CTesseractErrorCode_Sentinel,
};
#ifndef __cplusplus
typedef uint32_t CTesseractErrorCode;
#endif // __cplusplus

typedef struct TesseractProtocol {
  SyncPtr_Void _0;
} TesseractProtocol;

typedef struct ServiceTransportProcessor {
  SyncPtr_Void _0;
} ServiceTransportProcessor;

typedef enum ClientStatus_Tag {
  ClientStatus_Ready,
  ClientStatus_Unavailable,
  ClientStatus_Error,
} ClientStatus_Tag;

typedef struct ClientStatus {
  ClientStatus_Tag tag;
  union {
    struct {
      CString unavailable;
    };
    struct {
      CError error;
    };
  };
} ClientStatus;

typedef void (*CFutureOnCompleteCallback_ClientStatus)(SyncPtr_Void context,
                                                       struct ClientStatus *value,
                                                       CError *error);

typedef struct CFuture_ClientStatus {
  CAnyDropPtr ptr;
  COptionResponseResult (*set_on_complete)(const struct CFuture_ClientStatus *future,
                                           SyncPtr_Void context,
                                           struct ClientStatus *value,
                                           CError *error,
                                           CFutureOnCompleteCallback_ClientStatus cb);
} CFuture_ClientStatus;

typedef struct ClientConnection {
  CAnyDropPtr ptr;
  CFutureNothing (*send)(const struct ClientConnection *this, CDataRef data);
  CFutureData (*receive)(const struct ClientConnection *this);
} ClientConnection;

typedef struct ClientTransport {
  CAnyDropPtr ptr;
  CString (*id)(const struct ClientTransport *this);
  struct CFuture_ClientStatus (*status)(const struct ClientTransport *this,
                                        struct TesseractProtocol protocol);
  struct ClientConnection (*connect)(const struct ClientTransport *this,
                                     struct TesseractProtocol protocol);
} ClientTransport;

typedef struct CFuture_ClientStatus CFutureClientStatus;

typedef CAnyDropPtr ServiceBoundTransport;

typedef struct ServiceTransport {
  CAnyDropPtr ptr;
  ServiceBoundTransport (*bind)(struct ServiceTransport this,
                                struct ServiceTransportProcessor processor);
} ServiceTransport;

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

CString tesseract_error_get_description(const CError *err);

bool tesseract_protocol_is_equal(const struct TesseractProtocol *lhs,
                                 const struct TesseractProtocol *rhs);

CString tesseract_protocol_get_id(const struct TesseractProtocol *protocol);

void tesseract_protocol_free(struct TesseractProtocol *protocol);

CFutureData tesseract_service_transport_processor_process(struct ServiceTransportProcessor processor,
                                                          CDataRef data);

void tesseract_service_transport_processor_free(struct ServiceTransportProcessor *processor);

#ifdef __cplusplus
} // extern "C"
#endif // __cplusplus
