// swift-tools-version:5.6
// The swift-tools-version declares the minimum version of Swift required to build this package.
import PackageDescription

// Set it to true to use local binary (for development)
let useLocalBinary = false

// URL and checksum of prebuilt rust Core
let binaryUrl = "https://github.com/tesseract-one/Tesseract.swift/releases/download/0.5.1/Tesseract-Core.bin.zip"
let binaryChecksum = "6e3ceb475efa5a5258d551ec3c9f0ff4148b51b6c1b709e748ee0a0fbbc87ce3"

// Package description
let package = Package(
    name: "Tesseract",
    platforms: [.iOS(.v13)],
    products: [
        .library(
            name: "TesseractClient",
            targets: ["TesseractClient"]),
        .library(
            name: "TesseractService",
            targets: ["TesseractService"]),
        .library(
            name: "TesseractShared",
            targets: ["TesseractShared"]),
        .library(
            name: "TesseractTransportsClient",
            targets: ["TesseractTransportsClient"]),
        .library(
            name: "TesseractTransportsService",
            targets: ["TesseractTransportsService"]),
        .library(
            name: "TesseractTransportsShared",
            targets: ["TesseractTransportsShared"]),
        .library(
            name: "TesseractUtils",
            targets: ["TesseractUtils"])
    ],
    dependencies: [],
    targets: [
        .target(
            name: "TesseractClient",
            dependencies: ["TesseractTransportsClient", "TesseractShared"]),
        .target(
            name: "TesseractService",
            dependencies: ["TesseractTransportsService", "TesseractShared"]),
        .target(
            name: "TesseractShared",
            dependencies: ["TesseractTransportsShared", "CTesseractBin"]),
        .target(
            name: "TesseractTransportsClient",
            dependencies: ["TesseractTransportsShared"]),
        .target(
            name: "TesseractTransportsService",
            dependencies: ["TesseractTransportsShared"]),
        .target(
            name: "TesseractTransportsShared",
            dependencies: ["TesseractUtils"]),
        .target(
            name: "TesseractUtils",
            dependencies: ["CTesseract"]),
        // Header only target. Headers generated by Rust/generate_headers.sh
        .target(name: "CTesseract", dependencies: []),
        // Binary target
        useLocalBinary
            ? .binaryTarget(name: "CTesseractBin", path: "CTesseractBin.xcframework")
            : .binaryTarget(name: "CTesseractBin", url: binaryUrl, checksum: binaryChecksum)
    ]
)
